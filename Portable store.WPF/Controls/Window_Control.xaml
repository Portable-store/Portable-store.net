<!-- https://engy.us/blog/2020/01/01/implementing-a-custom-window-title-bar-in-wpf/ -->

<UserControl x:Class="Portable_store.WPF.Controls.Window_Control"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Portable_store.WPF.Controls"
             mc:Ignorable="d" 
             d:DesignHeight="32" d:DesignWidth="138" d:Background="White">

    <UserControl.Resources>
        <Style x:Key="TitleBarButtonPathStyle" TargetType="Path">
            <Setter Property="Width" Value="46" />
            <Setter Property="Height" Value="32" />
            <Setter Property="Stroke" Value="{Binding Path=Foreground,
							     RelativeSource={RelativeSource AncestorType={x:Type Button}}}" />
            <Setter Property="StrokeThickness" Value="1" />
        </Style>
        
        <Style x:Key="TitleBarButtonBorderContentPresenterStyle" TargetType="ContentPresenter">
            <Setter Property="Margin" Value="0" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="RecognizesAccessKey" Value="True" />
        </Style>

        <Style x:Key="TitleBarButtonBorderStyle" TargetType="Border">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="SnapsToDevicePixels" Value="true" />
        </Style>

        <Style x:Key="TitleBarButtonStyle" TargetType="Button">
            <Setter Property="Foreground" Value="{DynamicResource WindowTextBrush}" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Border" Style="{StaticResource TitleBarButtonBorderStyle}">
                            <ContentPresenter x:Name="Content_presenter" Style="{StaticResource TitleBarButtonBorderContentPresenterStyle}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource MouseOverOverlayBackgroundBrush}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource PressedOverlayBackgroundBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TitleBarCloseButtonStyle" TargetType="Button" BasedOn="{StaticResource TitleBarButtonStyle}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Border" Style="{StaticResource TitleBarButtonBorderStyle}" >
                            <ContentPresenter x:Name="Content_presenter" Style="{StaticResource TitleBarButtonBorderContentPresenterStyle}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource MouseOverWindowCloseButtonBackgroundBrush}" />
                                <Setter Property="Foreground" Value="{DynamicResource MouseOverWindowCloseButtonForegroundBrush}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource PressedWindowCloseButtonBackgroundBrush}" />
                                <Setter Property="Foreground" Value="{DynamicResource MouseOverWindowCloseButtonForegroundBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="auto" />
        </Grid.ColumnDefinitions>

        <Button Name="Minimize_Button"
		    Grid.Column="0"
		    Click="On_minimize_Button_click"
		    RenderOptions.EdgeMode="Aliased"
		    Style="{StaticResource TitleBarButtonStyle}">

            <Path Data="M 18,15 H 28"
                Style="{StaticResource TitleBarButtonPathStyle}" />
        </Button>
        <Button Name="Maximize_Button"
		    Grid.Column="1"
		    Click="On_maximize_restore_Button_click"
		    Style="{StaticResource TitleBarButtonStyle}">

            <Path Data="M 18.5,10.5 H 27.5 V 19.5 H 18.5 Z"
                Style="{StaticResource TitleBarButtonPathStyle}" />
        </Button>
        <Button Name="Restore_Button"
		    Grid.Column="1"
		    Click="On_maximize_restore_Button_click"
		    Style="{StaticResource TitleBarButtonStyle}">

            <Path Data="M 18.5,12.5 H 25.5 V 19.5 H 18.5 Z M 20.5,12.5 V 10.5 H 27.5 V 17.5 H 25.5"
                Style="{StaticResource TitleBarButtonPathStyle}" />
        </Button>
        <Button Name="Close_Button"
		    Grid.Column="2"
		    Click="On_close_Button_click"            
		    Style="{StaticResource TitleBarCloseButtonStyle}">

            <Path Data="M 18,11 27,20 M 18,20 27,11"
                Style="{StaticResource TitleBarButtonPathStyle}" />
        </Button>
    </Grid>
</UserControl>
